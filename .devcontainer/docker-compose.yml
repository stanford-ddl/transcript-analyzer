services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/workspace:cached
    command: /bin/sh -c "while sleep 1000; do :; done"
    depends_on:
      - db
      - redis
    networks:
      - app-network
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db  # Use the service name as the hostname
      - REDIS_HOST=redis
    ports:
      - "8000:8000"

  celery_worker:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/workspace:cached
    working_dir: /workspace
    command: python -m celery -A app.celery_config worker --loglevel=info
    depends_on:
      - redis
      - db
    networks:
      - app-network
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - REDIS_URL=redis://redis:6379/0

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  db:
    image: postgres:15  # Choose your desired PostgreSQL version
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"  # Expose PostgreSQL port
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge